---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/movies":
    get:
      summary: Retrieves movies
      tags:
      - Movies
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
      - name: client
        in: header
        required: true
        schema:
          type: string
      - name: uid
        in: header
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Movies
  "/api/movies/{id}":
    get:
      summary: Retrieves a movie
      tags:
      - Movies
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: access-token
        in: header
        required: true
        schema:
          type: string
      - name: client
        in: header
        required: true
        schema:
          type: string
      - name: uid
        in: header
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Movie found
    put:
      summary: Update a movie
      tags:
      - Movies
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: access-token
        in: header
        required: true
        schema:
          type: string
      - name: client
        in: header
        required: true
        schema:
          type: string
      - name: uid
        in: header
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Movie updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                showtimes:
                  type: string
                price:
                  type: number
              required:
              - showtimes
              - price
  "/api/movies/{id}/review":
    post:
      summary: Review a movie
      tags:
      - Movies
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: access-token
        in: header
        required: true
        schema:
          type: string
      - name: client
        in: header
        required: true
        schema:
          type: string
      - name: uid
        in: header
        required: true
        schema:
          type: string
      responses:
        '200':
          description: New Review
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                feedback:
                  type: string
                score:
                  type: number
              required:
              - score
  "/api/auth/sign_in":
    post:
      summary: Create a session
      tags:
      - Session
      parameters: []
      responses:
        '200':
          description: Login Success
        '401':
          description: 'Error: Unauthorized'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
